---
title: "Results Study 1"
author: "Lina Fricke"
date: today # the file we be printed with the todays date
format: 
  html: # can also be pdf, just write 'pdf' 
    self-contained: true # now I can send the html-file to someone else, not just a code
    toc: true # table of content in line 8
    toc-title: My contents
    toc-location: left # on the left side of the document
    theme: 
      dark: superhero
      light: minty
    fontsize: 32 px # de
    grid:
      sidebar-width: 300px
      body-width: 900px
      margin-width: 300px
      gutter-width: 1.5rem
    code-tools: 
     source: true
     toggle: false
     caption: This is my code
lang: de #german is de, default is english
citation-location: margin
bibliography: references.bib
execute: # alle Sachen für den Code können auch im code dann selbst festgelegt werden !
  echo: fenced
  warning: false
  messages: false
  error: true
code-fold: true # false, wenn es nicht ausgeklappt werden soll
code-summary: see this specific 
---

```{r}
#| eval: true
#| include: false
library(ggplot2)
library(tidyverse)
library(readxl)
library(dplyr)

soz = read_excel("/Users/linafricke/Documents/Promotion/Studie 1/06_Data/Soziodemografische Daten/Soziodemografische_Daten_und_Einflussfaktoren.xlsx")

vas = read_excel("/Users/linafricke/Documents/Promotion/Studie 1/06_Data/Soziodemografische Daten/Soziodemografische_Daten_und_Einflussfaktoren.xlsx", sheet = "VAS data")

navi = read_excel("/Users/linafricke/Documents/Promotion/Studie 1/06_Data/Neuronavigation/Neuronavigation_IX_korrigiert.xlsx")


# rename SM Group 
soz$sm_group <- factor(soz$sm_group,
                       levels = c(1, 2),
                       labels = c("high", "low"))

# Falls nötig: umwandeln
soz$sm_years_sum <- as.numeric(soz$sm_years_sum)

```

::: {.callout-note}
Es sind noch nicht alle Daten analysiert. Deswegen siehst du hier die vorläufigen Ergebnisse.
:::


# Soziodemografische Daten

Es wurden `r nrow(soz)` gesunde Probanden erhoben, mit `r table(soz$sex)["weiblich"]` weiblichen und `r table(soz$sex)["männlich"]` männlichen Teilnehmer*innen.  
Pro Social-Media-Gruppe sind von `r table(soz$sm_group)["high"]` aus der High-Gruppe und `r table(soz$sm_group)["low"]` aus der Low-Gruppe vollständige Datensätze vorhanden.

::: {.fragment .highlight-red}
This text will turn red
:::


::: {.panel-tabset}

### Alter

```{r}
#| echo: false
#| eval: true
#| out-width: 100%                               
#| fig-align: center                             
#| #fig-cap: A graph from mtcars
#| #fig-cap-location: margin
#| label: Boxplot Alter der Proband*innen

## === 2 Boxplots in einem Diagramm ===
boxplot(formula = soz$age ~ soz$sm_group, 
        col = c("azure4", "darkgoldenrod2"),
        xlab = "SM-Nutzung", ylab = "Alter",
        theme = theme_minimal())
```


### Geschlecht

Geschlecherverteilung in beiden SM-Nutzungsgruppen:
```{r}
#| echo: false
#| eval: true
#| out-width: 100%                                
#| fig-align: center                             
#| #fig-cap: A graph from mtcars
#| fig-cap-location: margin
#| label: Person by Sex

soz_clean <- soz %>%
filter(!is.na(sm_group), !is.na(sex)) %>%
  filter(sm_group %in% c("low", "high")) %>%
  filter(sex %in% c("weiblich", "männlich"))

tab <- table(soz_clean$sm_group, soz_clean$sex)
prop_tab <- prop.table(tab, margin = 1) * 100
prop_tab_t <- t(prop_tab)

barplot(height = prop_tab_t,
        beside = TRUE,
        col = c("azure2", "darkgoldenrod1"),
        border = "black",
        ylab = "Prozent",
        xlab = "SM-Nutzung",
        ylim = c(0, 60),
        names.arg = rownames(tab),
        legend.text = rownames(prop_tab_t),
        args.legend = list(title = "Geschlecht", x = "bottomleft"))
      theme = theme_minimal()
       
```



### BMI

Hier ist die BMI-Verteilung dargestellt.

```{r}
#| echo: false
#| eval: true
#| out-width: 100%                                
#| fig-align: center                             
#| #fig-cap: 
#| #fig-cap-location: margin
#| label: BMI

# Plot: Histogramm + Normalverteilung
## === 2 Boxplots in einem Diagramm ===
boxplot(formula = soz$bmi ~ soz$sm_group, 
        col = c("azure4", "darkgoldenrod2"),
        xlab = "SM-Nutzung", ylab = "BMI")
```

:::




## Social Media Behavior

::: {.panel-tabset}

### Jahre
```{r sm jahre plot}
#| echo: false
#| eval: true
#| out-width: 100%                                
#| fig-align: center                             
#| label: sm_years

## === 2 Boxplots in einem Diagramm ===
boxplot(formula = soz$sm_years_sum ~ soz$sm_group, 
        col = c("azure4", "darkgoldenrod2"),
        xlab = "SM-Nutzung", 
        ylab = "Jahre Nutzung (Summe privat & dienstl. Nutzung)")

```

### MTUAS

```{r mtuas plot}
#| echo: false
#| eval: true
#| out-width: 100%                                
#| fig-align: center                             
#| label: mtuas

## === 2 Boxplots in einem Diagramm ===
boxplot(formula = soz$mtuas ~ soz$sm_group, 
        col = c("azure4", "darkgoldenrod2"),
        xlab = "SM-Nutzung", 
        ylab = "MTUAS-Score")
```

### BSNAS

```{r bsnas plot}
#| echo: false
#| eval: true
#| out-width: 100%                                
#| label: bsnas

## === 2 Boxplots in einem Diagramm ===
boxplot(formula = soz$bsnas ~ soz$sm_group, 
        col = c("azure4", "darkgoldenrod2"),
        xlab = "SM-Nutzung", 
        ylab = "BSNAS-Score")
```

:::

::: {.panel-tabset}


## VAS

Mithilfe von VAS wurden Aufmerksamkeit, MÜdigkeit und Schmerzen jeweils vor und nach dem Experiment erhoben.





### Aufmerksamkeit



### Müdigkeit



### Schmerzen


:::


## Other influencing factors

::: {.panel-tabset}

### Sleep

### Playing Computer Games

### Instrument and Sport

### Social Media on Experimental Behavior


:::



# Neuronavigation

Die Kappe wurde mithilfe von Neuronavigation an beiden Tagen an `r nrow(data)` Punkten Fz, Cz, T7, T8 und Pz ausgerichtet. Die Differenz an beiden Tagen wurde mithilfe der Euklidischen Distanz berechnet und ist in @tbl-neuronavigation dargestellt.

```{r neuronavigation berechnung}
#| include: false
library(DT)
library(knitr)
library(readxl)
library(dplyr)
library(plotly)

data = read_excel("/Users/linafricke/Documents/Promotion/Studie 1/06_Data/Neuronavigation/Neuronavigation_IX_korrigiert.xlsx")

# Euklidische Distanz pro Proband berechnen
df_dist <- data %>%
  group_by(vp, marker) %>%
  summarise(
    dist = sqrt((x[2] - x[1])^2 + (y[2] - y[1])^2 + (z[2] - z[1])^2),
    .groups = "drop"
  )

# Gemittelte Distanz über alle Proband*innen pro Marker
df_mean <- df_dist %>%
  group_by(marker) %>%
  summarise(mean_dist = mean(dist))

df_mean <- df_mean %>%
  arrange(desc(mean_dist)) %>%
  mutate(marker = factor(marker, levels = marker))
```


```{r code neuronavigation table}
#| eval: true # code is executed
#| label: tbl-neuronavigation
#| tbl-cap: "Durchschnittliche euklidische Distanz"

# datatable(df_mean)
  

```


```{r code neuronavigation table and graph}
#| eval: true 
#| tbl-label: tbl-neuronavigation
#| fig-column: margin
#| fig-label: fig-neuronavigation

kable(df_mean)

ggplot(df_mean, aes(x = marker, y = mean_dist)) +
  geom_bar(stat = "identity", fill = "steelblue", color = "black") +
  labs(x = "Elektrode",
       y = "Mittlere Distanz (mm)") +
  theme_minimal()
```





<!-- # Stroop data -->

<!-- The Stroop test was initially invented by Stroop [@rsoft]. -->

<!-- # SRTT data -->

<!-- ## Not-divided into groups -->

<!-- ### Day 1 -->

<!-- ### Day 2 -->

<!-- ## Divided into groups -->

<!-- ### Day 1 -->

<!-- ### Day 2 -->

<!-- ## Memorized sequence -->






